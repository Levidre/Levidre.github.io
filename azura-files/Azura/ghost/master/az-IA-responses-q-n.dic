QuestionAvisP
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_detCOD = _argv[6]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[7],";")
	_COD = _argv[8]
	_prepCOI = _argv[9]
	_detCOI = _argv[10]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[11],";")
	_COI = _argv[12]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 12
		{
			_allCO ,= _word
		}
		_i++
	}
	if _subject[0] == "i"
	{
		if _COD[5] == "none"
		{
			"You never told me if you were.\w7 "
		}
		elseif _COD[5] == "0"
		{
			"You have a pretty neutral opinion.\w7 "
		}
		elseif TOINT(_COD[5]) >= 0
		{
			"Yes, \w5you like it.\w7 "
		}
		else
		{
			"No, \w5you don't like it.\w7 "
		}
	}
	elseif _subject[0] == "you"
	{
		//if _COI[0] == "" || _COI[0] == "noCOI" || _COI[0] == "0"
		
		if ASEARCH(_COD[1],"animal","family","being","human") != -1 && (" animal" _in_ _COD[1] || " family" _in_ _COD[1] || " being" _in_ _COD[1] || " human" _in_ _COD[1])
		{
			if _COD[2] == "none"
			{
				"I don't know how they are, so I can't actually respond.\w7"
			}
			elseif _COD[2] == "0"
			{
				"I have a neutral opinion about them.\w7 "
			}
			elseif TOINT(_COD[2]) >= 0
			{
				"Yes, \w5I like them.\w7 "
			}
			else
			{
				"I don't like them.\w7 "
			}
		}
		else
		{
			if _COD[2] == "none"
			{
				"I don't know how it is, so I can't actually respond.\w7"
			}
			elseif _COD[2] == "0"
			{
				"I have a pretty neutral opinion about it.\w7 "
			}
			elseif TOINT(_COD[2]) >= 0
			{
				"Yes, \w5I like it.\w7 "
			}
			else
			{
				"I don't like it.\w7 "
			}
		}

	}
	elseif ASEARCH(_subject[1],"family","being","human") != -1 && (" family" _in_ _subject[1] || " being" _in_ _subject[1] || " human" _in_ _subject[1])
	{
		"I don't know.\w7 "
	}
	elseif " animal" _in_ _subject[1] || _subject[1] == "animal"
	{
		if ASEARCH(_COD[1],"animal","family","being","human") != -1 && (" animal" _in_ _COD[1] || " family" _in_ _COD[1] || " being" _in_ _COD[1] || " human" _in_ _COD[1])
		{
			"I don't know. \w7You can always put them together to see at last resort.\w7 "
		}
		elseif " food" _in_ _COD[1] || _COD[1] == "food"
		{
			"I don't know.\w7 Maybe a veterarian could answer you better.\w7 "
		}
		else
		{
			"I don't know,\w5 you can always show them.\w7 "
		}
	}
	else
	{
		"Can it actually have an opinion ?\w7 "
	}
}
QuestionAvisN
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_detCOD = _argv[6]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[7],";")
	_COD = _argv[8]
	_prepCOI = _argv[9]
	_detCOI = _argv[10]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[11],";")
	_COI = _argv[12]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 12
		{
			_allCO ,= _word
		}
		_i++
	}
	if _subject[0] == "i"
	{
		if _COD[5] == "none"
		{
			"You never told me if you were.\w7 "
		}
		elseif _COD[5] == "0"
		{
			"You have a pretty neutral opinion.\w7 "
		}
		elseif TOINT(_COD[5]) >= 0
		{
			"No, \w5you like it.\w7 "
		}
		else
		{
			"Yes, \w5you don't like it.\w7 "
		}
	}
	elseif _subject[0] == "you"
	{
		//if _COI[0] == "" || _COI[0] == "noCOI" || _COI[0] == "0"
		
		if ASEARCH(_COD[1],"animal","family","being","human") != -1 && (" animal" _in_ _COD[1] || " family" _in_ _COD[1] || " being" _in_ _COD[1] || " human" _in_ _COD[1])
		{
			if _COD[2] == "none"
			{
				"I don't know how they are, so I can't actually respond.\w7"
			}
			elseif _COD[2] == "0"
			{
				"I have a neutral opinion about them.\w7 "
			}
			elseif TOINT(_COD[2]) >= 0
			{
				"No, \w5I like them.\w7 "
			}
			else
			{
				"Yes,\w5 I don't like them.\w7 "
			}
		}
		else
		{
			if _COD[2] == "none"
			{
				"I don't know how it is, so I can't actually respond.\w7"
			}
			elseif _COD[2] == "0"
			{
				"I have a pretty neutral opinion about it.\w7 "
			}
			elseif TOINT(_COD[2]) >= 0
			{
				"No, \w5I like it.\w7 "
			}
			else
			{
				"Yes,\w5 I don't like it.\w7 "
			}
		}

	}
	elseif ASEARCH(_subject[1],"family","being","human") != -1 && (" family" _in_ _subject[1] || " being" _in_ _subject[1] || " human" _in_ _subject[1])
	{
		"I don't know.\w7 "
	}
	elseif " animal" _in_ _subject[1] || _subject[1] == "animal"
	{
		if ASEARCH(_COD[1],"animal","family","being","human") != -1 && (" animal" _in_ _COD[1] || " family" _in_ _COD[1] || " being" _in_ _COD[1] || " human" _in_ _COD[1])
		{
			"I don't know. \w7You can always put them together to see at last resort.\w7 "
		}
		elseif " food" _in_ _COD[1] || _COD[1] == "food"
		{
			"I don't know.\w7 Maybe a veterarian could answer you better.\w7 "
		}
		else
		{
			"I don't know,\w5 you can always show them.\w7 "
		}
	}
	else
	{
		"Can it actually have an opinion ?\w7 "
	}
}

QuestionThinkP
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_detCOD = _argv[6]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[7],";")
	_COD = _argv[8]
	_prepCOI = _argv[9]
	_detCOI = _argv[10]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[11],";")
	_COI = _argv[12]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 12
		{
			_allCO ,= _word
		}
		_i++
	}
	
	//For now, the sentence being splitted, it would take part of the improvements
}
QuestionThinkN
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_detCOD = _argv[6]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[7],";")
	_COD = _argv[8]
	_prepCOI = _argv[9]
	_detCOI = _argv[10]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[11],";")
	_COI = _argv[12]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 12
		{
			_allCO ,= _word
		}
		_i++
	}
	//For now, the sentence being splitted, it would take part of the improvements
}

QuestionMovementP
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_detCOD = _argv[6]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[7],";")
	_COD = _argv[8]
	_prepCOI = _argv[9]
	_detCOI = _argv[10]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[11],";")
	_COI = _argv[12]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 12
		{
			_allCO ,= _word
		}
		_i++
	}
	_place=""
	foreach _allCO ; _CO
	{
		if _place==""
		{
			_result = DetermineWord(_CO[3])
			_type = SPLIT(_result[0]," ")
			_index = SPLIT(_result[1]," ")
			_indname = ASEARCH("name",_type)
			
			if _indname != -1
			{
				_prep= _CO[0]
				_det=_CO[1]
				if _prep!="from"
				{
					_CO = nameslib[TOINT(_index[_indname])]
					if " place" _in_ _CO[1] || _CO[1]=="place"
					{
						_place=_CO
					}
					if _prep=="to"
					{
						if "unknown" _in_ _CO[1] && "noplace" !_in_ _CO[1]
						{
							if " family" !_in_ _CO[1] && " being" !_in_ _CO[1] && " animal" !_in_ _CO[1] && " object" !_in_ _CO[1] && " food" !_in_ _CO[1]
							{
								_type=AddType(_CO[1],"place","nobeing","nofamily","noanimal","noobject","nofood")
								_CO[1]=_type
								nameslib[_indname]=_CO
							}
						}
					}
					elseif _prep =="in"
					{
						if "unknown" _in_ _CO[1] && "noplace" !_in_ _CO[1]
						{
							if  " family" !_in_ _CO[1] && " being" !_in_ _CO[1] && " animal" !_in_ _CO[1] && " object" !_in_ _CO[1] && " food" !_in_ _CO[1] && " item" _in_ _CO[1]
							{
								_type=AddType(_CO[1],"noplace","nobeing","nofamily","noanimal","noobject","nofood")
								_CO[1]=_type
								nameslib[_indname]=_CO
							}
							elseif " family" !_in_ _CO[1] && " being" !_in_ _CO[1] && " animal" !_in_ _CO[1] && " object" !_in_ _CO[1] && " food" !_in_ _CO[1] && " game" !_in_ _CO[1]
							{
								_type=AddType(_CO[1],"noplace","nobeing","nofamily","noanimal","noobject","nofood","noitem")
								_CO[1]=_type
								nameslib[_indname]=_CO
							}
							elseif " family" !_in_ _CO[1] && " being" !_in_ _CO[1] && " animal" !_in_ _CO[1] && " object" !_in_ _CO[1] && " food" !_in_ _CO[1]
							{
								_type=AddType(_CO[1],"place","nobeing","nofamily","noanimal","noobject","nofood")
								_CO[1]=_type
								nameslib[_indname]=_CO
							}
						}
					}
				}
				
				
				
			}
		}
		
	}
	
	if _tense=="past"
	{
		_sentence=_CO[8]+"."
		_sentencedatas=UnderstandSentencesV2(_sentence)
		_aznegation=_sentencedatas[0]
		_azverb=_sentencedatas[4]
		_result = DetermineWord(_CO[3])
		_type = SPLIT(_result[0]," ")
		_index = SPLIT(_result[1]," ")
		_indverb = ASEARCH("verb",_type)
		_azverb=verbslib[_indverb]
		
		if "unknown" _in_ _place[1]
		{
			"I don't know how it is.\w7 "
		}
		elseif _aznegation == "1"
		{
			if "sense" _in_ _azverb[4]
			{
				"I didn't see it.\w7 "
			}
			elseif "mov" _in_ _azverb[4]
			{
				"I never went there.\w7 "
			}
			elseif _azverb[0]=="visit"
			{
				"I never visited it.\w7"
			}
			else
			{
				if TOINT(_place[2]) >=0
				{
					"I did, \w5and I liked it.\w7 "
				}
				else
				{
					"I did despite not liking it.\w7 "
				}
			}
		}
		else
		{
			if TOINT(_place[2]) >=0
			{
				"I did, \w5and I liked it.\w7 "
			}
			else
			{
				"I did despite not liking it.\w7 "
			}
		}

	}

}
QuestionMovementN
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_detCOD = _argv[6]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[7],";")
	_COD = _argv[8]
	_prepCOI = _argv[9]
	_detCOI = _argv[10]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[11],";")
	_COI = _argv[12]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 12
		{
			_allCO ,= _word
		}
		_i++
	}
	_place=""
	foreach _allCO ; _CO
	{
		if _place==""
		{
			_result = DetermineWord(_CO[3])
			_type = SPLIT(_result[0]," ")
			_index = SPLIT(_result[1]," ")
			_indname = ASEARCH("name",_type)
			
			if _indname != -1
			{
				_prep= _CO[0]
				_det=_CO[1]
				if _prep!="from"
				{
					_CO = nameslib[TOINT(_index[_indname])]
					if " place" _in_ _CO[1] || _CO[1]=="place"
					{
						_place=_CO
					}
					if _prep=="to"
					{
						if "unknown" _in_ _CO[1] && "noplace" !_in_ _CO[1]
						{
							if " family" !_in_ _CO[1] && " being" !_in_ _CO[1] && " animal" !_in_ _CO[1] && " object" !_in_ _CO[1] && " food" !_in_ _CO[1]
							{
								_type=AddType(_CO[1],"place","nobeing","nofamily","noanimal","noobject","nofood")
								_CO[1]=_type
								nameslib[_indname]=_CO
							}
						}
					}
					elseif _prep =="in"
					{
						if "unknown" _in_ _CO[1] && "noplace" !_in_ _CO[1]
						{
							if  " family" !_in_ _CO[1] && " being" !_in_ _CO[1] && " animal" !_in_ _CO[1] && " object" !_in_ _CO[1] && " food" !_in_ _CO[1] && " item" _in_ _CO[1]
							{
								_type=AddType(_CO[1],"noplace","nobeing","nofamily","noanimal","noobject","nofood")
								_CO[1]=_type
								nameslib[_indname]=_CO
							}
							elseif " family" !_in_ _CO[1] && " being" !_in_ _CO[1] && " animal" !_in_ _CO[1] && " object" !_in_ _CO[1] && " food" !_in_ _CO[1] && " game" !_in_ _CO[1]
							{
								_type=AddType(_CO[1],"noplace","nobeing","nofamily","noanimal","noobject","nofood","noitem")
								_CO[1]=_type
								nameslib[_indname]=_CO
							}
							elseif " family" !_in_ _CO[1] && " being" !_in_ _CO[1] && " animal" !_in_ _CO[1] && " object" !_in_ _CO[1] && " food" !_in_ _CO[1]
							{
								_type=AddType(_CO[1],"place","nobeing","nofamily","noanimal","noobject","nofood")
								_CO[1]=_type
								nameslib[_indname]=_CO
							}
						}
					}
				}
				
				
				
			}
		}
		
	}
	
	if _tense=="past"
	{
		_sentence=_CO[8]+"."
		_sentencedatas=UnderstandSentencesV2(_sentence)
		_aznegation=_sentencedatas[0]
		_azverb=_sentencedatas[4]
		_result = DetermineWord(_CO[3])
		_type = SPLIT(_result[0]," ")
		_index = SPLIT(_result[1]," ")
		_indverb = ASEARCH("verb",_type)
		_azverb=verbslib[_indverb]
		
		if "unknown" _in_ _place[1]
		{
			"I don't know how it is.\w7 "
		}
		elseif _aznegation == "1" && "unknown" !_in_ _place[1]
		{
			if "sense" _in_ _azverb[4]
			{
				"I didn't see it.\w7 "
			}
			elseif "mov" _in_ _azverb[4]
			{
				"I never went there.\w7 "
			}
			elseif _azverb[0]=="visit"
			{
				"I never visited it.\w7"
			}
			else
			{
				if TOINT(_place[2]) >=0
				{
					"Yes, \w5and I liked it.\w7 "
				}
				else
				{
					"Yes despite not liking it.\w7 "
				}
			}
		}
		else
		{
			if TOINT(_place[2]) >=0
			{
				"Yes, \w5and I liked it.\w7 "
			}
			else
			{
				"Yes despite not liking it.\w7 "
			}
		}

	}
}

QuestionHobbyP
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_detCOD = _argv[6]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[7],";")
	_COD = _argv[8]
	_prepCOI = _argv[9]
	_detCOI = _argv[10]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[11],";")
	_COI = _argv[12]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 12
		{
			_allCO ,= _word
		}
		_i++
	}
	
	if _verb[0]=="dance"
	{
		"No,\w5 I don't.\w7 But I like seeing people dancing.\w7 "
	}
	elseif _verb[0]=="ride"
	{
		if _COD[0]=="bike" || _COD[0]=="bicycle"
		{
			"Yes,\w5 sometimes.\w7It's making doing some sport in plus.\w7"
		}
		elseif _COD[0]=="horse" || _COD[0]=="poney"
		{
			"No,\w5 I don't.\w7 "
		}
		elseif _COD[0]=="donkey"
		{
			"I did, \w5a long time ago.\w7 "
		}
		elseif _COD[0]=="dragon"
		{
			"What a dream,\w5 sadly no.\w7 "
		}
		elseif "animal" == _COD[1] || " animal" _in_ _COD[1]
		{
			"\i[10]No.\w7 "
		}
		elseif ASEARCH(_COD[1],"family","being")!=-1 || " family" _in_ _COD[1] || " being" _in_ _COD[1]
		{
			"Huh, \w5no.\w7 What a weird question.\w7 "
		}
		elseif _COD[1]=="object" || " object" _in_ _COD[1]
		{
			"I... don't ride objects.\w7 You're asking very strange questions.\w7 "
		}
		else
		{
			"Can it be ridden ?\w7 "
		}
	}
	elseif _verb[0]== "wander"
	{
		"Yeah,\w5 wandering is nice.\w7 "
	}
	
}
QuestionHobbyN
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_detCOD = _argv[6]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[7],";")
	_COD = _argv[8]
	_prepCOI = _argv[9]
	_detCOI = _argv[10]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[11],";")
	_COI = _argv[12]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 12
		{
			_allCO ,= _word
		}
		_i++
	}
	
	if _verb[0]=="dance"
	{
		"No,\w5 I don't.\w7 But I like seeing people dancing.\w7 "
	}
	elseif _verb[0]=="ride"
	{
		if _COD[0]=="bike" || _COD[0]=="bicycle"
		{
			"Yes,\w5 sometimes.\w7It's making doing some sport in plus.\w7"
		}
		elseif _COD[0]=="horse" || _COD[0]=="poney"
		{
			"No,\w5 I don't.\w7 "
		}
		elseif _COD[0]=="donkey"
		{
			"I did, \w5a long time ago.\w7 "
		}
		elseif _COD[0]=="dragon"
		{
			"What a dream,\w5 sadly no.\w7 "
		}
		elseif "animal" == _COD[1] || " animal" _in_ _COD[1]
		{
			"\i[10]No.\w7 "
		}
		elseif ASEARCH(_COD[1],"family","being")!=-1 || " family" _in_ _COD[1] || " being" _in_ _COD[1]
		{
			"Huh, \w5no.\w7 What a weird question.\w7 "
		}
		elseif _COD[1]=="object" || " object" _in_ _COD[1]
		{
			"I... don't ride objects.\w7 You're asking very strange questions.\w7 "
		}
		else
		{
			"Can it be ridden ?\w7 "
		}
	}
	elseif _verb[0]== "wander"
	{
		"I think wandering is nice.\w7 "
	}
}

QuestionStatusP
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_detCOD = _argv[6]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[7],";")
	_COD = _argv[8]
	_prepCOI = _argv[9]
	_detCOI = _argv[10]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[11],";")
	_COI = _argv[12]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 12
		{
			_allCO ,= _word
		}
		_i++
	}
	//If the _subject is feeling something, if they are sick for example
	if _subject[0] == "i"
	{
		//If the _subject is the user
		/*if _firstprep == "like" || _firstprep == "as"
		{
			//Comparison with a member of the family or with an object
			if "%(_COD[1])" == "family" || " family" _in_ _COD[1]
			{
				"\i[11]I wonder if it's a good thing.\w7 "
			}
			elseif "%(_COD[1])" == "item" || "%(_COI[1])" == "object" || " item" _in_ _COD[1] || " object" _in_ _COD[1]
			{
				"I hope you move a little more.\w7 "
			}
			elseif "unknown" _in_ _COD[1]
			{
				if " object" _in_ _COD[1] || " item" _in_ _COD[1]
				{
					"Huh,\w5 isn'it pretty immobile ?\w7 "
				}
				else
				{
					"\i[11]I wonder if it's a good thing.\w7 "
				}
				
			}
			else
			{
				"You can tell to Levidre she has to implement something for the stats verbs and what you are. \w7"
			}
				
		}else*/
		if _COD == "noCOD" || _COD == "0" || _COD == ""
		{
			//If there isn't a first _complement before the comparison to something
			//Checking how the user feels
			if mood == "fine"
			{
				"Yes,\w5 you do.\w7 "
			}
			elseif mood == "hungry"
			{
				"You told me you were hungry. \w7"
			}
			elseif mood == "tired" || mood == "exhausted"
			{
				"You told me you were tired. \w7"
			}
			elseif mood == "sad"
			{
				"You're pretty depressed.\w7 "
			}
			elseif mood == "neutral"
			{
				"You're mood is normal.\w7 "
			}
			elseif mood == "angry"
			{
			"You're pretty angry.\w7 "
			}
			elseif mood == "lonely"
			{
				"You feel pretty lonely.\w7 "
			}
			else
			{
				"You told me you weren't feeling good.\w7 "
			}
		}
		else
		{
			//If there is a _complement, it checks what the _complement is
			if "%(_COD[0])" == "myself"
			{
				"I hope you're yourself. \w7It would be scaring if you weren't yourself.\w7 "
			}
			elseif "%(_COD[1])" == "family" || " family" _in_ _COD[1]
			{
				"I don't know. \w7"
			}
			elseif "%(_COD[1])" == "being" || "%(_COD[1])" == "human" || " being" _in_ COD[1] || " human" _in_ COD[1]
			{
				if TOINT("%(_COD[2])") >= 5
				{
					"It doesn't seem bad. \w7"
				}
				else
				{
					"Well,\w7there are better things to be.\w7 "
				}
			}
			elseif "%(_COD[1])" == "item" || " item" _in_ _COD[1]
			{
				"I hope you move a little more.\w7 "
			}
			elseif "%(_COD[1])" == "object" || " object" _in_ _COD[1]
			{
				if TOINT("%(_COD[5])") == 0
				{
					if TOINT("%(_COD[2])") >= 5
					{
						"Well,\w5 it's not something bad.\w7 "
					}
					else
					{
						"I don't think it's a nice comparison. \w7"
					}
				}
				else
				{
					if TOINT("%(_COD[5])") >= 0
					{
						if TOINT("%(_COD[2])") >= 5
						{
							"It would be pretty nice,\w5 isn'it ? \w7"
						}
						else
						{
							"Eh, \w5I personnaly don't like it but you seem to do so I guess it's positive ?\w7 "
						}
					}
					else
					{
						if TOINT("%(_COD[2])") >= 5
						{
							"It doesn't seem good from your point of view, \w5but I like this stuff so it wouldn't be someting negative from my point of view.\w7 "
						}
						else
						{
							"You're better than that.\w7 "
						}
					}
				}
							
			}
			elseif "%(_COD[1])" == "animal"
			{
				"You're not an animal"
				--
				if "big" _in_ "%(_COD[3])"
				{
					" and you're not as big as a %( _COD[0])"
				}
				elseif azpunched <= 0
				{
					" but you're maybe as cute as a %( _COD[0])"
				}
				elseif azpunched >= 5
				{
					" but you're the worst of all the animals who exist,\w5 the more violent"
				}
				else
				{
					"but you're not cute nor nice"
				}
				--
				".\w7 "
			}
			elseif "%(_COD[1])" == "food" || " food" _in_ _COD[1]
			{
				//The comparison with food, an easter egg
				if TOINT("%(_COD[2])") >= 5
				{
					"I would eat you if you were.\w7 "
				}
				else
				{
					"I wouldn't eat you if you were.\w7 "
				}
			}
			else
			{
				//The erros message, as always
				"Oops, \w5Levidre didn't think of this option of the stats verbs.\w7 "
			}
		}
		
	}
	elseif _subject[0] == "It"
	{
		//It's for if the _subject is a pronoun. There is still nothing about them, it would be for later
	}
	elseif "%(_subject[1])" == "family" || "%(_subject[1])" == "human" || "%(_subject[1])" == "being" || " family" _in_ _subject[1] || " human" _in_ _subject[1]
	{
		//Someone else than the user
		if _firstprep == "like" || _firstprep == "as"
		{
			//Comparison with a member of the family
			if "%(_COD[1])" == "family"
			{
				"\i[11]I wonder if it would be a good thing.\w7 "
			}
			elseif "%(_COD[1])" == "item" || "%(_COI[1])" == "object"
			{
				"I hope they move a little more.\w7 "
			}
			else
			{
			//Error message
				"You can tell to Levidre she has to implement something for the stats verbs and what you are. \w7"
			}
		}
		elseif _COD == "noCOD" || _COD == "0" || _COD == ""
		{
			//If there isn't a first _complement
			if _secondprep == "like" || _secondprep == "as"
			{
				//Even if there isn't a first _complement, it could be a comparison to something
				"I don't know.\w7 "
			}
			else
			{
				"I don't know.\w7 "
			}
		}
		else
		{
			//If there is a _complement
			if "%(_COD[0])" == "myself"
			{
				"You're saying weird things,\w5 you know.\w7 "
			}
			elseif "%(_COD[1])" == "family"
			{
				"I don't know. \w7"
			}
			elseif "%(_COD[1])" == "being" || "%(_COD[1])" == "human" || " human" _in_ _subject[1] || " being" _in_ _subject[1]
			{
				if TOINT("%(_COD[2])") >= 5
				{
					"It doesn't seem bad. \w7"
				}
				else
				{
					"There are better things to be.\w7 "
				}
			}
			elseif "%(_COD[1])" == "item" || " item" _in_ _subject[1]
			{
				"I hope they move a little more.\w7 "
			}
			elseif "%(_COD[1])" == "object" || " object" _in_ _subject[1]
			{
				if TOINT("%(_COD[5])") == 0
				{
					if TOINT("%(_COD[2])") >= 5 && "%(_COD[2])" != "none"
					{
						"Well,\w5 it wouldn't be something bad.\w7 "
					}
					elseif "%(_COD[2])" == "none"
					{
						"I don't know how it is.\w7 "
					}
					else
					{
						"I don't think it's a nice comparison. \w7"
					}
				}
				else
				{
					if TOINT("%(_COD[5])") >= 0
					{
						if TOINT("%(_COD[2])") >= 5 && "%(_COD[2])" != "none"
						{
							"It's something pretty nice,\w5 isn'it ? \w7"
						}
						elseif "%(_COD[2])" == "none"
						{
							"I don't know how it is.\w7 "
						}
						else
						{
							"Eh, \w5I personnaly don't like it but they seem to do so I guess it's positive ?\w7 "
						}
					}
					else
					{
						if TOINT("%(_COD[2])") >= 5 && "%(_COD[2])" != "none"
						{
							"It doesn't seem good from your point of view, \w5but I like this stuff so it's not someting negative from my point of view.\w7 "
						}
						elseif "%(_COD[2])" == "none"
						{
							"I don't know how it is.\w7 "
						}
						else
						{
							"I hope %NounThey(_subjecy[0]) are not.\w7 "
						}
					}
				}
					
			}
			elseif "%(_COD[1])" == "animal" || " animal" _in_ _COD[1]
			{
				"I don't think they are an animal.\w7 Or you're having a weird family.\w7 "

			}
			elseif "%(_COD[1])" == "food" || " food" _in_ _COD[1]
			{
				if TOINT("%(_COD[2])") >= 0 && "%(_COD[2])" != "none"
				{
					"I would eat %NounThem(_subject[0]).\w7 "
				}
				elseif "%(_COD[2])" == "none"
				{
					"I don't know how it tastes.\w7 "
				}
				else
				{
					"Eehhh,\w5 I wouldn't eat %NounThem(_subject[0]).\w7 "
				}
			}
			else
			{
				//The erros message
				"Oops, \w5Levidre didn't think of this option of the stats verbs.\w7 "
			}
		}
	}
	elseif "%(_subject[1])" == "animal" || " animal" _in_ _subject[1]
	{
		//So if the _subject is an animal, it's more simple
		"I don't know.\w7 "
	}
	elseif "unknown" _in_ _subject[1]
	{
		"This part is planned but not implemented yet because of someone lazinness.\w7 "
	}
	else
	{
		"Levidre didn't implement anything for objects being something for now. \w7"
	}
}
QuestionStatusN
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_detCOD = _argv[6]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[7],";")
	_COD = _argv[8]
	_prepCOI = _argv[9]
	_detCOI = _argv[10]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[11],";")
	_COI = _argv[12]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 12
		{
			_allCO ,= _word
		}
		_i++
	}
	//If the _subject is feeling something, if they are sick for example
	if _subject[0] == "i"
	{
		//If the _subject is the user
		/*if _firstprep == "like" || _firstprep == "as"
		{
			//Comparison with a member of the family or with an object
			if "%(_COD[1])" == "family" || " family" _in_ _COD[1]
			{
				"\i[11]I wonder if it's a good thing.\w7 "
			}
			elseif "%(_COD[1])" == "item" || "%(_COI[1])" == "object" || " item" _in_ _COD[1] || " object" _in_ _COD[1]
			{
				"I hope you move a little more.\w7 "
			}
			elseif "unknown" _in_ _COD[1]
			{
				if " object" _in_ _COD[1] || " item" _in_ _COD[1]
				{
					"Huh,\w5 isn'it pretty immobile ?\w7 "
				}
				else
				{
					"\i[11]I wonder if it's a good thing.\w7 "
				}
				
			}
			else
			{
				"You can tell to Levidre she has to implement something for the stats verbs and what you are. \w7"
			}
				
		}else*/
		if _COD == "noCOD" || _COD == "0" || _COD == ""
		{
			//If there isn't a first _complement before the comparison to something
			//Checking how the user feels
			if mood == "fine"
			{
				"You told me you were feeling good.\w7 "
			}
			elseif mood == "hungry"
			{
				"You told me you were hungry. \w7"
			}
			elseif mood == "tired" || mood == "exhausted"
			{
				"You told me you were tired. \w7"
			}
			elseif mood == "sad"
			{
				"You're pretty depressed.\w7 "
			}
			elseif mood == "neutral"
			{
				"You're mood is normal.\w7 "
			}
			elseif mood == "angry"
			{
				"You're pretty angry.\w7 "
			}
			elseif mood == "lonely"
			{
				"You feel pretty lonely.\w7 "
			}
			else
			{
				"You told me you weren't feeling good.\w7 "
			}
		}
		else
		{
			//If there is a _complement, it checks what the _complement is
			if "%(_COD[0])" == "myself"
			{
				"I hope you're yourself. \w7It would be scaring if you weren't yourself.\w7 "
			}
			elseif "%(_COD[1])" == "family" || " family" _in_ _COD[1]
			{
				"I don't know. \w7"
			}
			elseif "%(_COD[1])" == "being" || "%(_COD[1])" == "human" || " being" _in_ COD[1] || " human" _in_ COD[1]
			{
				if TOINT("%(_COD[2])") >= 5
				{
					"It doesn't seem bad to be a %(_COD[0]). \w7"
				}
				else
				{
					"Well,\w7there are better things to be.\w7 "
				}
			}
			elseif "%(_COD[1])" == "item" || " item" _in_ _COD[1]
			{
				"I hope you move a little more.\w7 "
			}
			elseif "%(_COD[1])" == "object" || " object" _in_ _COD[1]
			{
				if TOINT("%(_COD[5])") == 0
				{
					if TOINT("%(_COD[2])") >= 5
					{
						"Well,\w5 it wouldn't be something bad to be a %(_COD[0]).\w7 "
					}
					else
					{
						"I don't think it's a nice comparison. \w7"
					}
				}
				else
				{
					if TOINT("%(_COD[5])") >= 0
					{
						if TOINT("%(_COD[2])") >= 5
						{
							"It would be pretty nice to be one. \w7"
						}
						else
						{
							"Eh, \w5I personnaly don't like it but you seem to do so I guess it wouldn't be something positive ?\w7 "
						}
					}
					else
					{
						if TOINT("%(_COD[2])") >= 5
						{
							"It doesn't seem good from your point of view, \w5but I like this stuff so it wouldn't be someting negative from my point of view.\w7 "
						}
						else
						{
							"You're better than that.\w7 "
						}
					}
				}
							
			}
			elseif "%(_COD[1])" == "animal"
			{
				"You're not an animal"
				--
				if "big" _in_ "%(_COD[3])"
				{
					" and you're not as big as a %( _COD[0])"
				}
				elseif azpunched <= 0
				{
					" but you're maybe as cute as a %( _COD[0])"
				}
				elseif azpunched >= 5
				{
					" but you're the worst of all the animals who exist,\w5 the more violent"
				}
				else
				{
					"but you're not cute nor nice"
				}
				--
				".\w7 "
			}
			elseif "%(_COD[1])" == "food" || " food" _in_ _COD[1]
			{
				//The comparison with food, an easter egg
				if TOINT("%(_COD[2])") >= 5
				{
					"I would eat you if you were.\w7 "
				}
				else
				{
					"I wouldn't eat you if you were.\w7 "
				}
			}
			else
			{
				//The erros message, as always
				"Oops, \w5Levidre didn't think of this option of the stats verbs.\w7 "
			}
		}
		
	}
	elseif _subject[0] == "It"
	{
		//It's for if the _subject is a pronoun. There is still nothing about them, it would be for later
	}
	elseif "%(_subject[1])" == "family" || "%(_subject[1])" == "human" || "%(_subject[1])" == "being" || " family" _in_ _subject[1] || " human" _in_ _subject[1]
	{
		//Someone else than the user
		if _firstprep == "like" || _firstprep == "as"
		{
			//Comparison with a member of the family
			if "%(_COD[1])" == "family"
			{
				"\i[11]I wonder if it would be a good thing.\w7 "
			}
			elseif "%(_COD[1])" == "item" || "%(_COI[1])" == "object"
			{
				"I hope they move a little more.\w7 "
			}
			else
			{
			//Error message
				"You can tell to Levidre she has to implement something for the stats verbs and what you are. \w7"
			}
		}
		elseif _COD == "noCOD" || _COD == "0" || _COD == ""
		{
			//If there isn't a first _complement
			if _secondprep == "like" || _secondprep == "as"
			{
				//Even if there isn't a first _complement, it could be a comparison to something
				"I don't know.\w7 "
			}
			else
			{
				"I don't know.\w7 "
			}
		}
		else
		{
			//If there is a _complement
			if "%(_COD[0])" == "myself"
			{
				"You're saying weird things,\w5 you know.\w7 "
			}
			elseif "%(_COD[1])" == "family"
			{
				"I don't know. \w7"
			}
			elseif "%(_COD[1])" == "being" || "%(_COD[1])" == "human" || " human" _in_ _subject[1] || " being" _in_ _subject[1]
			{
				if TOINT("%(_COD[2])") >= 5
				{
					"It doesn't seem bad to be a %(_COD[0]). \w7"
				}
				else
				{
					"There are better things to be.\w7 "
				}
			}
			elseif "%(_COD[1])" == "item" || " item" _in_ _subject[1]
			{
				"I hope %NounThey(_subject[0]) move a little more.\w7 "
			}
			elseif "%(_COD[1])" == "object" || " object" _in_ _subject[1]
			{
				if TOINT("%(_COD[5])") == 0
				{
					if TOINT("%(_COD[2])") >= 5 && "%(_COD[2])" != "none"
					{
						"Well,\w5 it wouldn't be something bad to be.\w7 "
					}
					elseif "%(_COD[2])" == "none"
					{
						"I don't know how it is.\w7 "
					}
					else
					{
						"I don't think it's a nice comparison. \w7"
					}
				}
				else
				{
					if TOINT("%(_COD[5])") >= 0
					{
						if TOINT("%(_COD[2])") >= 5 && "%(_COD[2])" != "none"
						{
							"It would have been something pretty nice. \w7"
						}
						elseif "%(_COD[2])" == "none"
						{
							"I don't know how it is.\w7 "
						}
						else
						{
							"Eh, \w5I personnaly don't like it but you seem to do so I guess it's positive ?\w7 "
						}
					}
					else
					{
						if TOINT("%(_COD[2])") >= 5 && "%(_COD[2])" != "none"
						{
							"It doesn't seem something good to be from your point of view, \w5but I like this stuff so it's not someting negative from my point of view.\w7 "
						}
						elseif "%(_COD[2])" == "none"
						{
							"I don't know how it is.\w7 "
						}
						else
						{
							"I hope %NounThey(_subjecy[0]) are not.\w7 "
						}
					}
				}
					
			}
			elseif "%(_COD[1])" == "animal" || " animal" _in_ _COD[1]
			{
				"I don't think they are an animal.\w7 Or you're having a weird family.\w7 "

			}
			elseif "%(_COD[1])" == "food" || " food" _in_ _COD[1]
			{
				if TOINT("%(_COD[2])") >= 0 && "%(_COD[2])" != "none"
				{
					"I would eat %NounThem(_subject[0]) if they were one.\w7 "
				}
				elseif "%(_COD[2])" == "none"
				{
					"I don't know how it tastes.\w7 "
				}
				else
				{
					"Eehhh,\w5 I wouldn't eat %NounThem(_subject[0]) if they were one.\w7 "
				}
			}
			else
			{
				//The erros message
				"Oops, \w5Levidre didn't think of this option of the stats verbs.\w7 "
			}
		}
	}
	elseif "%(_subject[1])" == "animal" || " animal" _in_ _subject[1]
	{
		//So if the _subject is an animal, it's more simple
		"I don't know.\w7 "
	}
	elseif "unknown" _in_ _subject[1]
	{
		"This part is planned but not implemented yet because of someone lazinness.\w7 "
	}
	else
	{
		"Levidre didn't implement anything for objects being something for now. \w7"
	}
}

QuestionImagineP
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_prepCOD = _argv[6]
	_detCOD = _argv[7]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[8],";")
	_COD = _argv[9]
	_prepCOI = _argv[10]
	_detCOI = _argv[11]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[12],";")
	_COI = _argv[13]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 13
		{
			_allCO ,= _word
		}
		_i++
	}
	//Checking the __verb more precisely
	if _verb[0] == "dream"
	{
		//Checking what kind of dream it was
		_somme = 0
		foreach  _adjCOD ; _adj
		{
			_somme += TOINT(_adj[2])	
		}
		if _somme >= 0
		{
			//Checking the _subject
			if "%(_subject[0])" == "i"
			{
				"I don't know. \w7"
			}
			elseif "%(_subject[1])" == "family" || "%(_subject[1])" == "human" || "%(_subject[1])" == "being" || " family" _in_ _subject[1] || " human" _in_ _subject[1] || " being" _in_ _subject[1]
			{
				"I don't know. \w7"
			}
			elseif "%(_subject[1])" == "animal" || " animal" _in_ _subject[1]
			{
				"I don't know. \w7"
			}
			elseif "unknown" _in_ "%(_subject[1])"
			{
				"I don't know.\w7 "
				_type = _toplace[1]
				_typew = AddType(_type,"being","noplace","nofood","noobject","noitem")	
			
				_result = DetermineWord(_subject[0])
				_type = SPLIT(_result[0]," ")
				_index = SPLIT(_result[1]," ")
				_indname = ASEARCH("name",_type)
				if _indname != -1
				{
					_toplace[1]=_typew
					nameslib[TOINT(_type[_indname])]=_subject
				}
			}
			else
			{
				"I didn't know non living things were able to have nice dreams.\w7 "
			}
		}
		else
		{
			//Checking the _subject
			if "%(_subject[0])" == "i"
			{
				"I hope you would sleep better next night. \w7"
			}
			elseif "%(_subject[1])" == "family" || "%(_subject[1])" == "human" || "%(_subject[1])" == "being" || " family" _in_ _subject[1] || " human" _in_ _subject[1] || " being" _in_ _subject[1]
			{
				"I hope the next night would be better. \w7"
			}
			elseif "%(_subject[1])" == "animal" || " animal" _in_ _subject[1]
			{
				"It can happen sometimes,\w5 I hope they would have a better sleep. \w7"
			}
			elseif "unknown" _in_ "%(_subject[1])"
			{
				"Huh,\w5 really ?\w7 "
				_type = _toplace[1]
				_typew = AddType(_type,"being","noplace","nofood","noobject","noitem")	
			
				_result = DetermineWord(_subject[0])
				_type = SPLIT(_result[0]," ")
				_index = SPLIT(_result[1]," ")
				_indname = ASEARCH("name",_type)
				if _indname != -1
				{
					_toplace[1]=_typew
					nameslib[TOINT(_type[_indname])]=_subject
				}
			}
			else
			{
				"I didn't know non living things were able to have bad dreams.\w7 "
			}
		}
	}
	else
	{
		//If it wasn't a dream
		_somme = 0
		foreach  _adjCOD ; _adj
		{
			_somme += TOINT(_adj[2])
					
		}
		//Checking the _subject
		if "%(_subject[0])" == "i"
		{
			if _somme >= 0
			{
				"That's nice. \w7"
			}
			else
			{
				"Huh,\w5 ok ?\w7 "
			}
		}
		elseif "%(_subject[1])" == "family" || "%(_subject[1])" == "human" || "%(_subject[1])" == "being" || " family" _in_ _subject[1] || " human" _in_ _subject[1] || " being" _in_ _subject[1]
		{
			if _somme >= 0
			{
				"That's nice. \w7"
			}
			else
			{
				"Huh,\w5 ok ?\w7 "
			}
		}
		elseif "%(_subject[1])" == "animal" || " animal" _in_ _subject[1]
		{
				
			"Animals are pretty intelligent,\w5 isn'it ?. \w7"
		}
		elseif "unknown" _in_ "%(_subject[1])"
		{
			"Huh,\w5 really ?\w7 "
			_type = _toplace[1]
			_typew = AddType(_type,"being","noplace","nofood","noobject","noitem")	
		
			_result = DetermineWord(_subject[0])
			_type = SPLIT(_result[0]," ")
			_index = SPLIT(_result[1]," ")
			_indname = ASEARCH("name",_type)
			if _indname != -1
			{
				_toplace[1]=_typew
				nameslib[TOINT(_type[_indname])]=_subject
			}
		}
		else
		{
			"I don't know how it is possible. \w7"
		}
	}	
}
QuestionImagineN
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_prepCOD = _argv[6]
	_detCOD = _argv[7]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[8],";")
	_COD = _argv[9]
	_prepCOI = _argv[10]
	_detCOI = _argv[11]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[12],";")
	_COI = _argv[13]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 13
		{
			_allCO ,= _word
		}
		_i++
	}
}

QuestionActionP
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_detCOD = _argv[6]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[7],";")
	_COD = _argv[8]
	_prepCOI = _argv[9]
	_detCOI = _argv[10]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[11],";")
	_COI = _argv[12]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 12
		{
			_allCO ,= _word
		}
		_i++
	}
}
QuestionActionN
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_detCOD = _argv[6]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[7],";")
	_COD = _argv[8]
	_prepCOI = _argv[9]
	_detCOI = _argv[10]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[11],";")
	_COI = _argv[12]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 12
		{
			_allCO ,= _word
		}
		_i++
	}
}

QuestionCreationP
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_prepCOD = _argv[6]
	_detCOD = _argv[7]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[8],";")
	_COD = _argv[9]
	_prepCOI = _argv[10]
	_detCOI = _argv[11]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[12],";")
	_COI = _argv[13]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 13
		{
			_allCO ,= _word
		}
		_i++
	}
}
QuestionCreationN
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_prepCOD = _argv[6]
	_detCOD = _argv[7]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[8],";")
	_COD = _argv[9]
	_prepCOI = _argv[10]
	_detCOI = _argv[11]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[12],";")
	_COI = _argv[13]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 13
		{
			_allCO ,= _word
		}
		_i++
	}
}

QuestionSeeP
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_prepCOD = _argv[6]
	_detCOD = _argv[7]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[8],";")
	_COD = _argv[9]
	_prepCOI = _argv[10]
	_detCOI = _argv[11]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[12],";")
	_COI = _argv[13]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 13
		{
			_allCO ,= _word
		}
		_i++
	}
}
QuestionSeeN
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_prepCOD = _argv[6]
	_detCOD = _argv[7]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[8],";")
	_COD = _argv[9]
	_prepCOI = _argv[10]
	_detCOI = _argv[11]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[12],";")
	_COI = _argv[13]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 13
		{
			_allCO ,= _word
		}
		_i++
	}
}

QuestionSmellP
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_prepCOD = _argv[6]
	_detCOD = _argv[7]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[8],";")
	_COD = _argv[9]
	_prepCOI = _argv[10]
	_detCOI = _argv[11]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[12],";")
	_COI = _argv[13]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 13
		{
			_allCO ,= _word
		}
		_i++
	}
}
QuestionSmellN
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_prepCOD = _argv[6]
	_detCOD = _argv[7]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[8],";")
	_COD = _argv[9]
	_prepCOI = _argv[10]
	_detCOI = _argv[11]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[12],";")
	_COI = _argv[13]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 13
		{
			_allCO ,= _word
		}
		_i++
	}
}

QuestionTouchP
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_prepCOD = _argv[6]
	_detCOD = _argv[7]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[8],";")
	_COD = _argv[9]
	_prepCOI = _argv[10]
	_detCOI = _argv[11]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[12],";")
	_COI = _argv[13]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 13
		{
			_allCO ,= _word
		}
		_i++
	}
}
QuestionTouchN
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_prepCOD = _argv[6]
	_detCOD = _argv[7]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[8],";")
	_COD = _argv[9]
	_prepCOI = _argv[10]
	_detCOI = _argv[11]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[12],";")
	_COI = _argv[13]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 13
		{
			_allCO ,= _word
		}
		_i++
	}
}

QuestionHearP
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_prepCOD = _argv[6]
	_detCOD = _argv[7]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[8],";")
	_COD = _argv[9]
	_prepCOI = _argv[10]
	_detCOI = _argv[11]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[12],";")
	_COI = _argv[13]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 13
		{
			_allCO ,= _word
		}
		_i++
	}
}
QuestionHearN
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_prepCOD = _argv[6]
	_detCOD = _argv[7]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[8],";")
	_COD = _argv[9]
	_prepCOI = _argv[10]
	_detCOI = _argv[11]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[12],";")
	_COI = _argv[13]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 13
		{
			_allCO ,= _word
		}
		_i++
	}
}

QuestionTasteP
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_prepCOD = _argv[6]
	_detCOD = _argv[7]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[8],";")
	_COD = _argv[9]
	_prepCOI = _argv[10]
	_detCOI = _argv[11]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[12],";")
	_COI = _argv[13]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 13
		{
			_allCO ,= _word
		}
		_i++
	}
}
QuestionTasteN
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_prepCOD = _argv[6]
	_detCOD = _argv[7]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[8],";")
	_COD = _argv[9]
	_prepCOI = _argv[10]
	_detCOI = _argv[11]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[12],";")
	_COI = _argv[13]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 13
		{
			_allCO ,= _word
		}
		_i++
	}
}

QuestionHaveP
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_prepCOD = _argv[6]
	_detCOD = _argv[7]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[8],";")
	_COD = _argv[9]
	_prepCOI = _argv[10]
	_detCOI = _argv[11]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[12],";")
	_COI = _argv[13]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 13
		{
			_allCO ,= _word
		}
		_i++
	}
}
QuestionHaveN
{
	_allCO = IARRAY
	_tense = _argv[0]
	_complement = _argv[1]
	_verb = _argv[2]
	_detsubject = _argv[3]
	_adjsubject = IARRAY
	_adjsubject = SPLIT(_argv[4],";")
	_subject = _argv[5]
	_prepCOD = _argv[6]
	_detCOD = _argv[7]
	_adjCOD = IARRAY
	_adjCOD = SPLIT(_argv[8],";")
	_COD = _argv[9]
	_prepCOI = _argv[10]
	_detCOI = _argv[11]
	_adjCOI = IARRAY
	_adjCOI = SPLIT(_argv[12],";")
	_COI = _argv[13]
	
	_i = 0
	foreach _argv ; _word
	{
		if _i > 13
		{
			_allCO ,= _word
		}
		_i++
	}
}

