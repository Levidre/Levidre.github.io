//Here are the function for the fighting mini-game, because it would be too much things in the menu.


 Select.enterfight
 {
	if nowshell == "Pyjama shell"
	{
		battleshell = 1
		"\![enter,passivemode]* You want to fight me ? \0\w7\![change,shell,Normal shell]Ok, \w5I'm ready to fight.\n"
	}
	else
	{
		"\![enter,passivemode]* You want to fight me ? \0\s[11]\i[32]\i[33]\i[45]\i[18]\i[83]\i[86]\w7Ok, \w5I'm ready to fight.\n"
	}
	--
	"\n[half]\f[italic,true]The HP would be shown in percent.\f[italic,false]\n"
	--
	//Set up the variables for the battle.
	inbattle = 1
	azhp = 100
	userhp = 100
	azcharged = 0
	usercharged = 0
	userattacking = 0
	previoussong = songplayed
	songplayed = "..\mus_battle2.ogg"
	songpaused = ""
	paused = 0
	tempplaymode = playmode
	playmode = "onemuloop"
	battlestat = IARRAY
	--
	Select.playmu
	--
	//Start the music.
	_i = SAORI("saori\mciaudior.dll", "load","..\mus_battle2.ogg")
	_i = SAORI("saori\mciaudior.dll", "play")
	
	--
	//Then the battle begin with the turn of the user.
	UserTurn
 }
 
 //The functions for both Azura and the user turns---------------------------------------------------------------------------------------------------------------------------------------------------------
 
 //Here is the function for the user's turn
 UserTurn
 {
	if "defend" _in_ azcharged
	{
		"\i[186]"
	}
	--
	"\1\f[italic,true]Current stats :\n\n[half]You : %(userhp)    Azura : %(azhp)\f[italic,false]"
	--
	"\0\f[italic,true]What do you want to do ?\_q\f[italic,false]\n\n[half]"
	--
	//It would remove defend or dodge of the status of the user because it was only for one turn.
	if "defend" _in_ usercharged || "dodge" _in_ usercharged
	{
		if "charged" _in_ usercharged
		{
			usercharged = "charged"
		}
		else
		{
			usercharged = " "
		}
	}
	--
	if "defend" _in_ azcharged || "dodge" _in_ azcharged
	{
		if "charged" _in_ azcharged
		{
			azcharged = "charged"
		}
		else
		{
			azcharged = " "
		}
	}
	--
	 
	SAVEVAR
	//Set up the variables used by the functions for the user.
	battlestat ,= "choose"
	turn = "You"
	grammar = "do"
	othergrammar = "is"
	opponent =  "Azura"
	personstat = "%(usercharged)"
	opponentstat = "%(azcharged)"
	--
	"\![*]\q[Attack,attack]    \![*]\q[Defend,defend]\n\![*]\q[Heal yourself,heal]    \![*]\q[Charge an attack,charge]\n\![*]\q[Dodge,dodge]    \![*]\q[Give up the fight,gaveup]"
 } 
 //Here is the AI which would control Azura during the battle.
 AzuraTurn
 {
	//Set up the variables for the turn of Azura.
	turn = "Azura"
	grammar = "does"
	othergrammar = "are"
	opponent = "You"
	personstat = "%(azcharged)"
	opponentstat = "%(usercharged)"
	--
	//Then an action will be choose and called for Azura.
	if "charged" _in_ azcharged && userhp <= 30
	{
		Select.attack
	}
	elseif userhp <= 15
	{
		Select.attack
	}
	else
	{
		if azhp <= 15
		{
			if "charged" _in_ usercharged
			{
				Select.dodge
			}
			else
			{
				Select.heal
			}
		}
		elseif azhp <= 67
		{
			if userhp <= 29
			{
				Select.charge
			}
			else
			{
				if usercharged == "charged"
				{
					if RAND(6) <= 1
					{
						Select.defend
					}
					else
					{
						if "charged" _in_ azcharged
						{
							Select.attack
						}
						else
						{
							if RAND(7) == 1
							{
								Select.dodge
							}
							elseif RAND(7) <= 3
							{
								Select.heal
							}
							else
							{
								Select.charge
							}
						}
					}
				}
				elseif "charged" _in_ usercharged
				{
					if RAND(3) == 1
					{
						Select.defend
					}
					else
					{
						if "charged" _in_ azcharged
						{
							Select.attack
						}
						else
						{
							if RAND(3) == 1
							{
								Select.charge
							}
							elseif RAND(7) <= 3
							{
								Select.heal
							}
							else
							{
								Select.dodge
							}
						}
					}
				}
				elseif RAND(2) == 1
				{
					Select.heal
				}
				else
				{
					tempvar = RAND(3)
					--
					if "charged" _in_ azcharged
					{
						if tempvar == 1
						{
							Select.defend
						}
						else
						{
							Select.attack
						}
					}
					elseif tempvar == 2
					{
						Select.charge
					}
					elseif tempvar == 1
					{
						Select.attack
					}
					else
					{
						Select.defend
					}
				}
			}
		}
		elseif azhp <= 90
		{
			temprand = RAND(10)
			--
			if "charged" _in_ azcharged
			{
				if "charged" _in_ usercharged && temprand <= 5
				{
					Select.defend
				}
				elseif temprand <= 2
				{
					Select.defend
				}
				else
				{
					if temprand <= 1
					{
						Select.heal
					}
					else
					{
						Select.attack
					}
					
				}
			}
			elseif "charged" _in_ usercharged
			{
				if temprand <= 4
				{
					Select.defend
				}
				else
				{
					if temprand <= 7
					{
						Select.charge
					}
					else
					{
						Select.heal
					}
				}
			}
			else
			{
				if temprand == 9
				{
					Select.dodge
				}
				elseif temprand == 8
				{
					Select.heal
				}
				elseif	temprand == 7
				{
					Select.attack
				}
				elseif temprand == 5 || temprand == 4
				{
					Select.defend
				}
				else
				{
					Select.charge
				}
			}
		}
		else
		{
			temprand = RAND(10)
			--
			if "charged" _in_ azcharged
			{
				if temprand <= 7
				{
					Select.attack
				}
				else
				{
					Select.defend
				}
			}
			else
			{
				if temprand <= 3
				{
					Select.charge
				}
				elseif temprand <= 5
				{
					Select.defend
				}
				else
				{
					Select.attack
				}
			}
		}
	}
 } 
 AzuraTurnAlphaBeta
 {
	 
	//Set up the variables for the turn of Azura.
	turn = "Azura"
	grammar = "does"
	othergrammar = "are"
	opponent = "You"
	personstat = "%(azcharged)"
	opponentstat = "%(usercharged)"
	//azcharged = "charged"
	_choice = TestChoice[1]
	--
	//" and the numbers %(TestChoice[2])"
	--
	case _choice
	{
		when "heal"
		{
			Select.heal
		}
		when "attack"
		{
			Select.attack
		}
		when "defend"
		{
			Select.defend
		}
		when "charge"
		{
			Select.charge
		}
		when "dodge"
		{
			Select.dodge
		}
	}

	if _choice == ""
	{
		_heal = "heal"
	}
 }
 
 TestChoice
 {
	if usercharged == "charged"
	{
		opattack = 32
	}
	else
	{
		opattack = 14
	}
	_h = WillPlay("heal")
	_a = WillPlay("attack")
	_d = WillPlay("defend")
	_c = WillPlay("charge")
	_do = WillPlay("dodge")
	
	_min = _h
	
	if _d[0] < _min[0]
	{
		_min = _d
	}
	if _c[0] < _min[0]
	{
		_min = _c
	}
	
	
	if _a[0] < _min[0]
	{
		_min = _a
	}
	if _do[0] < _min[0]
	{
		_min = _do
	}
	_result = IARRAY
	_result[0] = _min[1]
	_result[1] = _min[3]
	_result[2] = " \n%(_h) %(_d) %(_a) %(_c)"
	_result
 }
 
 WillPlay
 {
	_choose = _argv[0]
	//azcharged = "charged"
	_h = 0
	_a = 0
	_c = 0
	_d = 0
	_do = 0
	case _choose
	{
		when "attack"
		{
			_h = 15 - 14
			_d = - 7
			_c = - 14
			if azcharged == "charged"
			{
				_a  = 32 - 14
			}
			else
			{
				_a = 0
			}
			
			if oldusercharged == "charged"
			{
				oldusercharged = ""
				_h -=18 - NextTurn
				_d -= 9 - NextTurn
				_c += NextTurn -18
				_a -= 18 -NextTurn
				oldusercharged = "charged"
			}
			else
			{
				_c += NextTurn
			}
			
			
		}
		when "defend"
		{
			_choice = ""
			_h = 16 + NextTurn
			_d = 0 + NextTurn
			_c = NextTurn
			
			if azcharged == "charged"
			{
				_a  = 16
			}
			else
			{
				_a = 7
			}
		}
		when "heal"
		{
			_h = 0 + NextTurn
			_d = - 16 + NextTurn
			_c = - 16 + NextTurn
	
			if azcharged == "charged"
			{
				_a  = 16
			}
			else
			{
				_a = 14 - 16
			}	
		}
		when "charge"
		{
			_h = 16 + NextTurn
			_d = 0 + NextTurn
			_c = NextTurn
			
			if azcharged == "charged"
			{
				_a  = 32
			}
			else
			{
				_a = 14
			}
		}
		when "dodge"
		{
			_choice = ""
			_h = 16 + NextTurn
			_d = 0 + NextTurn
			_c = NextTurn
			
			if azcharged == "charged"
			{
				_a  = 16
			}
			else
			{
				_a = 7
			}
		}
	}
	
	_choice = IARRAY
	
	_effectivenessmax = _h
	_effectivenessmin = _h
	_choicemax  = "heal"
	_choicemin = "heal"
	if azhp >= 100
	{
		_effectivenessmax = -100
		_effectivenessmin = 100
	}
	
	
	
	if _d < _effectivenessmin
	{
		_choicemin = "defend"
		_effectivenessmin = _d
	}
	if azcharged != "charged"
	{
		if _c > _effectivenessmax
		{
			_choicemax = "charge"
		_effectivenessmax = _c
		}
		if _c < _effectivenessmin
		{
			_choicemin = "charge"
			_effectivenessmin = _c
		}
	}
	
	if _a > _effectivenessmax
	{
		_choicemax = "attack"
		_effectivenessmax = _a
	}
	if _a < _effectivenessmin
	{
		_choicemin = "attack"
		_effectivenessmin = _a
	}
	if _d > _effectivenessmax
	{
		_choicemax = "defend"
		_effectivenessmax = _d
	}
	elseif _d == _effectivenessmax && _d == _h
	{
		if RAND(2) == 1
		{
			_choicemax = "defend"
			_effectivenessmax = _d
		}
		else
		{
			_choicemax = "heal"
			_effectivenessmax = _h
		}
	}
	
	_choice[0] = _effectivenessmin
	_choice[1] = _effectivenessmax
	_choice[2] = _choicemin
	_choice[3] = _choicemax
	_choice[4] = " et %(_choose) %(_h) %(_a) %(_d) %(_c)\n"
	_choice
 } 

NextTurn
{
	
	if azcharged == "charged"
	{
		0
	}
	else
	{
		azcharged = "charged"
		_res = TestChoice[0]
		azcharged = ""
		_res
		
	}
}


 //The different actions during a battle-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 //What happen if someone choose to attack the other.
 Select.attack
 {
	//If the turn is user's turn, Azura would play first because she needs to choose if she would defend or try to dodge before the user's attack.
	if turn == "You"
	{
		userattacking = 1
		oldusercharged = usercharged
		if hardbattle != 1
		{
			AzuraTurn
		}
		else
		{
			AzuraTurnAlphaBeta
		}
		
		--
		//After Azura's turn, the variables need to be set up again for the user.
		turn = "You"
		grammar = "do"
		othergrammar = "is"
		opponent =  "Azura"
		personstat = "%(usercharged)"
		opponentstat = "%(azcharged)"
		
	}
	isdodging = 0
	--
	"\_v[item_stick_attack.wav]"	
	--
	if "charged" _in_ personstat
	{
		damages = 31 + RAND(3)
		--
		if turn == "Azura"
		{
			"\i[175]"
			
		}
		else
		{
			"\i[179]"
			--
			if "defend" _in_ azcharged
			{
				"\i[187]"
			}
		}
		--
		"\f[italic,true]%(turn) %(grammar) a charged"
		--
		if "dodge" _in_ opponentstat
		{
			if RAND(2) == 1
			{
				damage = 0
				isdodging = 1
			}
			else
			{
				"\_v[soul_damage_1.wav]"
			}
			--
			if turn == "You"
			{
				"\i[192]"
			}
		}
		else
		{
			"\_v[soul_damage_1.wav]"
		}
		--
		" attack.\f[italic,false]\n"
		--
		if "defend" _in_ opponentstat
		{
			damages = damages - 14 - RAND(4)
			
			"\f[italic,true]%(opponent) %(othergrammar) defending.\f[italic,false]\n"
		}
		
	}
	else
	{
		damages = 13 + RAND(4)
		--
		if turn == "You"
		{
			"\i[179]"
			--
			if "defend" _in_ azcharged
			{
				"\i[187]"
			}
		}
		--
		"\f[italic,true]%(turn) %(grammar) a normal "
		--
		if "dodge" _in_ opponentstat
		{
			if RAND(2) == 1
			{
				damage = 0
				isdodging = 1
			}
			else
			{
				"\_v[soul_damage_1.wav]"
			}
			--
			if turn == "You"
			{
				"\i[192]"
			}
		}
		else
		{
			"\_v[soul_damage_1.wav]"
		}
		--
		if turn == "Azura"
		{
			"\i[190]"
		}
		--
		"attack.\f[italic,false]\n"
		--
		if "defend" _in_ opponentstat
		{
			damages = damages - 7 - RAND(4)
			
			"\f[italic,true]%(opponent) %(othergrammar) defending.\f[italic,false]\n"
		}
	}
	--
	if "dodge" _in_ opponentstat
	{
		if isdodging == 1
		{
			damages = 0
			--
			"\f[italic,true]%(opponent) %(othergrammar) dodging the attack.\f[italic,false]\n"
		}
		else
		{
			"\f[italic,true]%(opponent) %(othergrammar) failing dodging the attack.\f[italic,false]\n"
		}
	}
	--
	if turn == "You"
	{
		if "charged" _in_ azcharged
		{
			"\w9\i[181]"
		}
		else
		{
			"\w9\i[180]"
		}
	}
	--
	"\f[italic,true]Damages done : %(damages)\f[italic,false]\n"
	--
	battlestat ,= "%(turn) choose attack, %(personstat)"
	if turn == "You"
	{
		azhp = azhp - damages
		usercharged = " "
		--
		if azhp > 0
		{
			userattacking = 0
			UserTurn
		}
		else
		{
			"\f[italic,true]You won the battle.\f[italic,false]\n\n[half]%(azpose)%(arms)* Congrats,\w5 you did a good job.\![leave,passivemode]"
			--
			playmode = tempplaymode
			songplayed = previoussong
			paused = 0
			isplayed = 1
			nbbattles = nbbattles + 1
			--
			"\![raise,OnChoiceSelect,playmu]"
			--
			
			
			"\e"
		}
	}
	else
	{
		userhp = userhp -damages
		azcharged = " "
		--
		if userhp > 0
		{
			if userattacking != 1
			{
				"\n[half]"
				--
				UserTurn
			}
		}
		else
		{
			"\f[italic,true]You loose the battle.\f[italic,false]\n\n[half]%(azpose)%(arms)* It's not your lucky day. \w7Next time maybe ?\![leave,passivemode]"
			--
			
			playmode = tempplaymode
			songplayed = previoussong
			isplayed = 1
			paused = 0
			nbbattles = nbbattles + 1
			--
			"\![raise,OnChoiceSelect,playmu]"
			--
			"\e"
		}
	}
	
 }
 
 //Make someone defends, the damages are reduced of half when defending.
 Select.defend
 {
	if turn == "You" && opponent == "Azura" && reference0 == "defend"
	{
		oldusercharged = usercharged
		if "charged" _in_ usercharged
		{
			oldusercharged = "charged"
			usercharged = "charged defend"
		}
		else
		{
			usercharged = "defend"
		}
		--
		"\f[italic,true]You prepare yourself to defend.\f[italic,false]\n"
		--
		battlestat,= "user choose defend ,%(usercharged)"
		--
		if hardbattle != 1
		{
			AzuraTurn
		}
		else
		{
			AzuraTurnAlphaBeta
		}
	}
	elseif turn == "Azura" && opponent == "You"
	{
		"\i[183]"
		--
		if "charged" _in_ azcharged
		{
			azcharged = "charged defend"
		}
		else
		{
			azcharged = "defend"
		}
		battlestat ,= "Azura choose defend, %(azcharged)"
		--
		if userattacking == 1
		{
			"\f[italic,true]Azura is ready to defend.\f[italic,false]\n"
		}
		else
		{
			"\f[italic,true]Azura was ready to defend for nothing.\f[italic,false]\n\n[half]"
			--
			UserTurn
		}
		
	 }
 }
 
 //Charging an attack would permit to do an attack a little more than twice powerful.
 Select.charge
 {
	if turn == "You" && opponent == "Azura" && reference0 == "charge"
	{
		oldusercharged = usercharged
		"\f[italic,true]You're charging a powerful attack.\f[italic,false]\n"
		--
		usercharged = "charged"
		--
		battlestat,= "user choose charge, %(usercharged)"
		--
		if hardbattle != 1
		{
			AzuraTurn
		}
		else
		{
			AzuraTurnAlphaBeta
		}
	}
	elseif turn == "Azura" && opponent == "You"
	{
		"\f[italic,true]\i[170]Azura is charging a powerful attack.\f[italic,false]\n"
		--
		azcharged = "charged"
		--
		battlestat,= "Azura choose charge, %(azcharged)"
		--
		if userattacking != 1
		{
			"\n[half]"
			--
			UserTurn
		}
		else{}
	}
 }
 
 //1/2 change to avoid all damages, to use if the hp are very low.
 Select.dodge
 {
	if turn == "You" && opponent == "Azura" && reference0 == "dodge"
	{
		"\f[italic,true]You're looking attentivly at Azura, preparing to dodge her attack.\f[italic,false]\n"
		--
		oldusercharged = usercharged
		if "charged" _in_ usercharged
		{
			oldusercharged = "charged"
			usercharged = "charged dodge"
		}
		else
		{
			usercharged = "dodge"
		}
		--
		battlestat,= "user choose dodge, %(usercharged)"
		--
		if hardbattle != 1
		{
			AzuraTurn
		}
		else
		{
			AzuraTurnAlphaBeta
		}
	}
	elseif turn == "Azura" && opponent == "You"
	{
		if "charged" _in_ azcharged
		{
			azcharged = "charged dodge"
		}
		else
		{
			azcharged = "dodge"
		}
		--
		battlestat,= "Azura choose dodge, %(azcharged)"
		--
		if userattacking == 1
		{
			"\f[italic,true]Azura is looking attentivly at you, ready to dodge your attack.\f[italic,false]\n"
			
		}
		else
		{
			"\f[italic,true]Azura was ready to dodge for nothing.\f[italic,false]\n\n[half]"
			--
			UserTurn
		}
	}
 }
 
 //Heal more than what an attack does, a charged attack would always do a lot more damages though.
 Select.heal
 {
	if turn == "You" && opponent == "Azura" && reference0 == "heal"
	{
		gain = 15 + RAND(4)
		--
		if "charged" _in_ usercharged
		{
			usercharged = "charged"
		}
		else
		{
			usercharged = " "
		}
		oldusercharged = usercharged
		--
		if userhp >= 110
		{
			"\f[italic,true]You cannot heal more.\f[italic,false]\n"
		}
		else
		{
			"\f[italic,true]You heal yourself, you gain %(gain) HP.\f[italic,false]\n"
			--
			userhp = userhp + gain
		}
		--
		battlestat,= "user choose heal, %(usercharged)"
		--
		if hardbattle != 1
		{
			AzuraTurn
		}
		else
		{
			AzuraTurnAlphaBeta
		}
	}
	elseif turn == "Azura" && opponent == "You"
	{
		gain = 15 + RAND(4)
		
		--
		if "charged" _in_ azcharged
		{
			azcharged = "charged"
		}
		else
		{
			azcharged = " "
		}
		--
		if azhp >= 110
		{
			"\f[italic,true]Azura cannot heal more.\f[italic,false]\n"
		}
		else
		{
			"\f[italic,true]Azura heals herself, she recover %(gain) HP.\f[italic,false]\n"
			--
			azhp = azhp + gain
		}
		--
		battlestat,= "Azura choose heal, %(azcharged)"
		--
		if userattacking != 1
		{
			"\n[half]"
			--
			UserTurn
		}
		else{}
	}
 }
 
 Select.gaveup
 {
	if nowshell != "Old shell" && inpyjama == 1
	{
		"* Oh ?\w5 You don't want to fight anymore ?\![embed,OnChoiceSelect,playmu]\![leave,passivemode]\n"
	}
	else
	{
		"* Oh ?\w5 You don't want to fight anymore ?%(azpose)%(arms)\![leave,passivemode]\![embed,OnChoiceSelect,playmu]\n"
	}
	--
	if userhp >= azhp
	{
		"* What a shame,\w5 you were closer to win."
	}
	else
	{
		"* I understand, \w5you don't want to see me win,\w5 isn'it ?\w7\n* What a shame."
	}
	playmode = tempplaymode
	songplayed = previoussong
	isplayed = 1
	paused = 0
	--
	if nowshell != "Old shell" && inpyjama == 1
	{
		"\![change,shell,Pyjama shell]"
	}
 }