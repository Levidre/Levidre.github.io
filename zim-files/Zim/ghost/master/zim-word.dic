//---------------------------Envelopes--------------------------

defaultpose
{
	"%(gpose)"
	--
	//Zim
	"\0"
	--
	if worried == 1
	{
		"%(zpose)%(zworried)"
	}
	elseif worried == -1
	{
		//"%(zrelieved)%(arms)"
	}
	else
	{	
		"%(zpose)%(zsmile)\i[100]%(zeyes)%(arms)"
	}
	
	--
	//GIR
	"%(gsmile)%(geyes)%(arms)"
	
}

/// Poses
zpose
{
	if hasspiderlegs
	{
		zspiderpose
	}
	else
	{
		znormalpose
	}
}
gpose
{
	if disguised == 0
	{
		"\1\s[70]"
	}
	elseif disguised == 1
	{
		"\1\s[80]"
	}
	else
	{
		"\1\s[81]"
	}
}

znormalpose
{
	if disguised != 1
	{
		"\0\s[10]"
	}
	else
	{
		"\0\s[11]"
	}
}
zspiderpose
{
	if disguised != 1
	{
		"\0\s[40]"
	}
	else
	{
		"\0\s[41]"
	}
}

gdutypose
{
	if disguised == 0
	{
		"\1\s[71]"
	}
	elseif disguised == 1
	{
		"\1\s[80]"
	}
	else
	{
		"\1\s[82]"
	}
}

zposefront
{
	if hasspiderlegs
	{
		zspiderposefront
	}
	else
	{
		znormalposefront
	}
}
znormalposefront
{
	if disguised != 1
	{
		"\0\s[12]"
	}
	else
	{
		"\0\s[13]"
	}
}
zspiderposefront
{
	if disguised != 1
	{
		"\0\s[60]"
	}
	else
	{
		"\0\s[61]"
	}
}

zposenormal
{
	if hasspiderlegs
	{
		zspiderposenormal
	}
	else
	{
		znormalposenormal
	}
}
znormalposenormal
{
	if disguised != 1
	{
		"\0\s[32]"
	}
	else
	{
		"\0\s[33]"
	}
}
zspiderposenormal
{
	if disguised != 1
	{
		"\0\s[40]"
	}
	else
	{
		"\0\s[41]"
	}
}

zbackpose
{
	if hasspiderlegs
	{
		zspiderbackpose
	}
	else
	{
		znormalbackpose
	}
}
znormalbackpose
{
	if disguised != 1
	{
		"\0\s[20]"
	}
	else
	{
		"\0\s[21]"
	}
}
zspiderbackpose
{
	if disguised != 1
	{
		"\0\s[50]"
	}
	else
	{
		"\0\s[51]"
	}
}

zfrontpose
{
	if hasspiderlegs
	{
		zspiderfrontpose

	}
	else
	{
		znormalfrontpose
	}
}
znormalfrontpose
{
	if disguised != 1
	{
		"\0\s[30]"
	}
	else
	{
		"\0\s[31]"
	}
}
zspiderfrontpose
{
	if disguised != 1
	{
		"\0\s[60]"
	}
	else
	{
		"\0\s[61]"
	}
}


zrandompose
{
	"%(zpose)"
	"%(zfrontpose)"
	"%(zposefront)"
}

zsidepose
{
	if hasspiderlegs
	{
		zspiderposenormal
		zspidernormalpose
	}
	else
	{
		znormalposenormal
		znormalnormalpose
	}
}

/// Global poses

zhappy
{
	"\0%(zhappyface)%(zhappyarms)"
	
}
ghappy
{
	"\1%(ghappyface)%(ghappyarms)"
}

zplotting
{
	"\0"
	--
	"\i[117]\i[118]"
	"\i[115]\i[116]"	
	"\i[115]\i[116]"	
	--
	"\i[127]"
	"\i[119]"
	"\i[129]"
	--
	"\i[128]"
	"\i[120]"
	"\i[130]"
	--
	"\i[52]"
	--
	"\i[62]"
	"\i[63]"
	"\i[64]"
	--
	"\i[41]"
	"\i[42]"
	--
	"\i[143]\i[199]"
	"\i[149]\i[199]"
	"\i[149]\i[193]"
	"\i[146]\i[196]"
	
}

zsatisfied
{
	"\0"
	--
	"\i[50]"
	"\i[51]"
	--
	if RAND(4) == 0
	{
		"\i[119]\i[120]"
		--
		"\i[127]\i[128]"
	}
	else
	{
		"\i[112]\i[114]"
		--
		"\i[127]\i[128]"
		"\i[129]\i[130]"
	}
	--
	"\i[41]"
	"\i[49]"
	--
	"\i[63]"
	"\i[66]"
	--
	"\i[143]"
	"\i[140]"
	--
	"\i[193]"
	"\i[190]"
	
}

zrelieved
{
	"\0"
	--
	"\i[100]"
	--
	"\i[111]\i[119]\i[113]\i[120]"
	"\i[127]\i[112]\i[128]\i[114]"
	"\i[127]\i[119]\i[128]\i[120]"
	--
	"\i[64]"
	"\i[66]"
	"\i[63]"
	--
	"\i[51]"
	--
	"%(arms)"
}

zworried
{
	"\0"
	--
	"\i[100]"
	--
	"%(zworriedface)%(zworriedarms)"
}

zgreat
{
	"%(zgreatface)\i[100]%(zgreatarms)"
}

zangry
{
	"%(zangryface)%(zangryarms)"
}

zfacepalm
{
	"\0%(zfacepalmface)%(zfacepalmarms)"
}

zwondering
{
	"%(zwonderingface)%(zwonderingarms)"
}

gwondering
{
	"%(gwonderingface)%(gwonderingarms)"
}

gsatisfied
{
	"%(gsatisfiedface)%(arms)"
}

gobey
{
	"%(gobeyface)%(gobeyarms)"
}

// Poses parts
zeyes
{
	"\0"
	--
	"\i[111]\i[112]\i[113]\i[114]"
	"\i[127]\i[128]\i[112]\i[114]"
	"\i[129]\i[130]\i[112]\i[114]"
	--	
	"\i[49]"
	"\i[41]"
}
geyes
{
	"\1"
	--
	"\i[100]\i[101]"
	--
	"\i[50]"
}

zsmile
{
	"\0"
	--
	"\i[52]"
	"\i[50]"
	--
	"\i[60]"
	"\i[68]"
	"\i[69]"
}
gsmile
{
	"\1"
	--
	"\i[60]"
}

arms
{
	"\i[140]"
	"\i[141]"
	--
	"\i[190]"
	"\i[191]"
}

zhappyface
{
	"%(zhappyeyes)"
	--
	"\i[62]"
	"\i[63]"	
}

zhappyeyes
{
	"\0"
	--
	"\i[117]\i[118]\i[111]\i[113]"
	"\i[115]\i[116]\i[111]\i[113]"	
	"\i[133]\i[134]"
	"\i[136]\i[137]"
	--
	"\i[54]"
	--
	"\i[49]"
}
zhappyarms
{
	"\0"
	--
	if RAND(4) == 0
	{
		"\i[145]\i[195]"
	}
	else
	{
		"\i[147]"
		"\i[150]"
		--
		"\i[197]"
		"\i[200]"
	}
}

ghappyface
{
	"%(ghappyeyes)"
	--
	"\i[62]"
	"\i[63]"
	--
	"\i[49]"
}
ghappyeyes
{
	"\1"
	--
	"\i[117]\i[118]"
	"\i[127]\i[128]"	
	"\i[136]\i[137]"
	--
	"\i[54]"
}

ghappyarms
{
	"\1"
	--
	"\i[147]\i[197]"
	"\i[148]\i[198]"
}

zsatisfiedface
{
	"\0%(zsatisfiedeyes)%(zsatisfiedsmile)"
	--
	"\i[41]"
	"\i[49]"

}

zsatisfiedeyes
{
	"\0"
	--
	"\i[50]"
	"\i[51]"
	--
	if RAND(4) == 0
	{
		"\i[119]\i[120]"
		--
		"\i[127]\i[128]"
	}
	else
	{
		"\i[112]\i[114]"
		--
		"\i[127]\i[128]"
		"\i[129]\i[130]"
	}
}

zsatisfiedsmile
{
	"\0"
	--
	"\i[63]"
	"\i[66]"
}


zwonderingface
{
	"%(zwonderingeyes)"
	--
	"\i[100]"
	"\i[101]"
	"\i[102]"
	--
	"\i[60]"
	"\i[63]"
	"\i[66]"
	"\i[69]"
}

zwonderingeyes
{
	"\0"
	--
	"\i[49]"
	"\i[41]"
	--
	"\i[50]"
	"\i[51]"
	--
	{
		"\i[126]"
		"\i[122]"
		--
		"\i[129]"
		"\i[127]"
	}
	{
		"\i[125]"
		"\i[121]"
		--
		"\i[130]"
		"\i[128]"
	}
	--
	"\i[112]\i[114]"
	"\i[119]\i[120]"
}

zwonderingarms
{
	"\0"
	--
	{
		"\i[191]"
		"\i[193]"
		--
		"\i[149]"
	}
	{
		"\i[141]"
		"\i[143]"
		--
		"\i[199]"
	}
	"\i[146]\i[196]"
}

gwonderingface
{
	"\1"
	--
	"\i[50]"
	"\i[51]"
	--
	"\i[100]\i[101]"
	"\i[121]\i[122]"
	--
	"\i[60]"
	"\i[63]"
	"\i[67]"
	"\i[69]"
}

gwonderingarms
{
	"\1"
	--
	{
		"\i[191]"
		"\i[190]"
		"\i[192]"
		--
		"\i[149]"
	}
	{
		"\i[141]"
		"\i[140]"
		"\i[142]"
		--
		"\i[199]"
	}
}

zboredface
{
	"%(zboredeyes)"
	--
	"\i[60]"
	"\i[68]"
	"\i[69]"
}
zboredeyes
{
	"\0"
	--
	"\i[49]"
	"\i[41]"
	--
	"\i[52]"
	--
	"\i[127]\i[128]\i[112]\i[114]"
	"\i[129]\i[130]\i[112]\i[114]"
}

zworriedface
{
	"\0"
	--
	"%(zworriedeyes)"
	--
	"\i[64]"
	"\i[67]"
	"\i[65]"
}
zworriedeyes
{
	"\0"
	--	
	"\i[41]"
	--
	"\i[53]"
	"\i[52]"
	--
	"\i[119]\i[120]\i[121]\i[122]"
	"\i[125]\i[126]\i[119]\i[120]"
	"\i[125]\i[126]\i[112]\i[114]"
	
}
zworriedarms
{
	"\0"
	--
	"\i[140]"
	"\i[141]"
	"\i[149]"
	--
	"\i[190]"
	"\i[191]"
	"\i[199]"
}

zangryface
{
	"%(zangryeyes)"
	--
	"\i[64]"
	"\i[67]"
	"\i[65]"
}
zangryeyes
{
	"\0"
	--
	"\i[40]"
	"\i[42]"
	--
	"\i[52]"
	"\i[53]"
	--
	if RAND(3) == 0
	{
		"\i[128]\i[127]\i[115]\i[116]"
	}
	else
	{
		"\i[123]\i[128]"
		"\i[124]\i[127]"
		"\i[123]\i[124]"
		--
		"\i[112]\i[114]"
		"\i[115]\i[116]"
	}
	
}
zangryarms
{
	"\0"
	--
	"\i[144]\i[194]"
	"\i[145]\i[195]"
	"\i[152]\i[202]"
}

zgreatface
{
	"\0"
	--
	"\i[117]\i[118]\i[111]\i[113]"
	"\i[115]\i[116]\i[127]\i[128]"
	--
	"\i[50]"
	--
	"\i[62]"
	"\i[63]"
	--
	"\i[49]"
}
zgreatarms
{
	"\0"
	--
	"\i[144]"
	"\i[151]"
	"\i[142]"
	"\i[150]"
	"\i[145]"
	--
	"\i[201]"
	"\i[192]"
	"\i[200]"
}

zfacepalmface
{
	"\0"
	--
	"\i[53]"
	"\i[51]"
	"\i[52]"
	--
	"\i[40]"
	"\i[42]"
	--
	"\i[61]"
	"\i[65]"
	"\i[69]"
	"\i[68]"
	--
	if RAND(5) == 0
	{
		"\i[133]\i[134]"
	}
	else
	{
		"\i[115]"
		"\i[117]"
		"\i[119]"
		--
		"\i[116]"
		"\i[118]"
		"\i[120]"
		--
		"\i[127]"
		"\i[129]"
		--
		"\i[124]"
		"\i[128]"
		"\i[130]"
		
	}
}
zfacepalmarms
{
	"\0"
	--
	{
		"\i[154]"
		--
		"\i[191]"
		"\i[193]"
		"\i[202]"
	}
	{
		"\i[141]"
		"\i[143]"
		"\i[152]"
		--
		"\i[204]"
	}
}


zrelaxedarms
{
	"\0"
	--
	{
		"\i[141]"
		"\i[143]"
		--
		"\i[193]"
		"\i[191]"
	}
	{
		"\i[140]"
		"\i[143]"
		--
		"\i[193]"
		"\i[190]"
	}
}
zexplainarms
{
	"\0"
	--
	{
		"\i[142]"
		--
		"\i[192]"
		"\i[191]"
		"\i[193]"
	}
	{
		"\i[192]"
		--
		"\i[142]"
		"\i[141]"
		"\i[143]"
	}
}

zpowerfularms
{
	"\0"
	--
	"\i[144]"
	"\i[145]"
	"\i[150]"
	--
	"\i[194]"
	"\i[195]"
	"\i[200]"
}

zpointarms
{
	"\0"
	--
	{
		"\i[155]"
		--
		"\i[190]"
		"\i[191]"
		"\i[193]"
	}
	{
		"\i[140]"
		"\i[141]"
		"\i[143]"
		--
		"\i[205]"
	}
}

zlookg
{
	"\0"
	--
	_height = surfacescoordinates[1] - surfacescoordinates[3]
	_width = surfacescoordinates[0] - surfacescoordinates[2]
	
	if _width != 0
	{
		_tantog = _height*100/_width*lookdirection
		if _tantog < -35 || _tantog > 85
		{
			if _height < 0
			{
				"\i[105]"
			}
			else
			{
				"\i[104]"
			}
			return
		}
			
	}
	--
	"\i[101]"	
}

gsadface
{
	"\1"
	--
	"\i[65]"
	"\i[67]"
	"\i[69]"
	--
	"\i[50]"
	"\i[52]"
	--
	"\i[121]\i[122]"
	"\i[125]\i[126]"
}
gcryface
{
	"\1"
	--
	"\i[53]"
	--
	"\i[67]"
	"\i[65]"
	--
	"\i[129]\i[130]"
}

gsatisfiedface
{
	"\1"
	--
	"\i[54]"
	"\i[50]"
	--
	"\i[117]\i[118]"
	"\i[127]\i[128]"
	--
	"\i[66]"
	"\i[62]"
	"\i[63]"
	--
	"\i[49]"
}

gobeyface
{
	"\1"
	--
	"\i[51]"
	"\i[54]"
	"\i[50]"
	--
	"\i[123]\i[124]"
	--
	"\i[60]"
	"\i[65]"
	"\i[69]"
	"\i[67]"
}

genthusiastarms
{
	"\1"
	--
	"\i[142]\i[192]"
	"\i[150]\i[200]"
	"\i[151]\i[201]"
}

grandomarms
{
	"\1"
	--
	"\i[140]"
	"\i[141]"
	"\i[152]"
	"\i[153]"
	--
	"\i[190]"
	"\i[191]"
	"\i[202]"
	"\i[203]"
}

gobeyarms
{
	'\1'
	--
	{
		"\i[153]"
		--
		"\i[190]"
		"\i[191]"
		"\i[202]"
	}
	{
		"\i[203]"
		--
		"\i[140]"
		"\i[141]"
		"\i[152]"
	}
}

garmsup
{
	"\1"
	--
	{
		"\i[148]"
		--
		"\i[190]"
		"\i[191]"
		"\i[198]"
	}
	{
		"\i[198]"
		--
		"\i[148]"
		"\i[142]"
		"\i[140]"
		"\i[141]"
	}
}

zspidertransition
{
	"\0"
	--
	if SHIORI3FW.LastSurface[0] == 10 || SHIORI3FW.LastSurface[0] == 12
	{
		"\s[48]\w5\w9\w9\s[40]"
	}
	elseif SHIORI3FW.LastSurface[0] == 11 || SHIORI3FW.LastSurface[0] == 13
	{
		"\s[49]\w5\w9\w9\s[41]"
	}
	elseif SHIORI3FW.LastSurface[0] == 20
	{
		"\s[48]\w5\w9\w9\s[50]"
	}
	elseif SHIORI3FW.LastSurface[0] == 21
	{
		"\s[49]\w5\w9\w9\s[51]"
	}
	elseif SHIORI3FW.LastSurface[0] == 30
	{
		"\s[68]\w5\w9\w9\s[60]"
	}
	elseif SHIORI3FW.LastSurface[0] == 31
	{
		"\s[69]\w5\w9\w9\s[61]"
	}
	elseif SHIORI3FW.LastSurface[0] == 40
	{
		"\i[0]\w5\w9\w9\s[10]"
	}
	elseif SHIORI3FW.LastSurface[0] == 41
	{
		"\i[0]\w5\w9\w9\s[11]"
	}
	elseif SHIORI3FW.LastSurface[0] == 50
	{
		"\i[0]\w5\w9\w9\s[20]"
	}
	elseif SHIORI3FW.LastSurface[0] == 51
	{
		"\i[0]\w5\w9\w9\s[21]"
	}
	elseif SHIORI3FW.LastSurface[0] == 60
	{
		"\i[0]\w5\w9\w9\s[30]"
	}
	elseif SHIORI3FW.LastSurface[0] == 61
	{
		"\i[0]\w5\w9\w9\s[31]"
	}
}

hasspiderlegs
{
	if SHIORI3FW.LastSurface[0] < 40
	{
		0
	}
	else
	{
		1
	}
}

filthy
{
	"horrible"
	"filthy"
	"awful"
	"dirty"
	"stinky"
	"gross"
	"disgusting"
	--
	""
	" %(filthy)"
}

amazing
{
	"amazing"
	"ingenious"
	"wonderful"
	"stunning"
}

badfood
{
	"pizza"
	"burger"
	"tacos"
	"chicken and rice"
	"french fries"
	
}

goodfood
{
	"crepes"
	"waffles"
	"candies"
	"chocolate"
	"popcorns"
}

pak
{
	if askedpak != 1
	{
		"back thingy"
		"backpack"
	}
	else
	{
		"PAK"
	}
}

// Language
irken
{
	if hastranslator == -1
	{
		"\e"
	}
	elseif hastranslator != 1
	{
		"\f[name,Irken]"
	}
	else
	{
		if istranslating != 1
		{
			"\i[2001](You use the translator.)\n\n[half]"
			istranslating = 1
		}
		--
		"\f[italic,true]"
	}
	
}

irkens
{
	if hastranslator != 1
	{
		"\f[name,default]"
	}
	else
	{
		istranslating = 0
		"\f[italic,false]"
	}
	
}

fileextent
{
	".dll"
	".mp3"
	".avi"
	".pdf"
	".jpg"
	".png"
	".ogg"
	".midi"
	".txt"
	".gif"
}

dangerousfileextent
{
	".dic"
	".exe"
	".cpp"
	".c"
	".java"
	".py"
	".dat"
	".nar"
}

countryflag : nonoverlap
{
	"french"
	"american"
	"pakistani"
	"russian"
	"czechoslovakian"
	"german"
	"danish"
	"irish"
	"spanish"
	"polish"
	"indian"
	"zimbabwean"
	"australian"
	"swedish"
	"swiss"
	"italian"
	"greec"
	"moroccan"
	"chinese"
	"korean"
	"japanese"
	"hawaiian"
	"portuguese"
	"vietnamese"
	"cambodian"
	"canadian"
	"austrian"
	"british"
	"turkish"
	"algerian"
	"south african"
	"peruvian"
	"brazilian"
	"earthing"
}

prideflag
{
	"black, grey, white and purple"
	"cyan, pink and white"
	"pink, purple and blue"
	"rainbow"
	"green, white, grey and black"
	"orange, white and pink"
	"pink, yellow and cyan"
	"yellow, white, purple and black"
}

book
{
	"a fantasy book"
	"some book about Earth plants"
	"a book about plants"
	"a recipe book"
	"a book about human anatomy"
	"a book about human behaviour"
	"a book about love"
	"a comic"
	"a sci-fi book"
	"a thriller book"
	"a book for kids"
	"something to read"
	"your favorite book"
	"some %(color) book"
	"some scientific book"
	"a school book"
	"some book about animals"
	"a book about space"
}

schoolstuff
{
	"a pen"
	"a nice pen"
	"some marbles"
	"an ink cartridge"
	"some glue"
	"a %(color) pen"
	"a %(color) felt-pen"
}

shirt
{
	"a space-themed shirt"
	"a shirt with a galaxy on it"
	"a %(color) shirt"
	"a shirt with a music band logo"
	"a video game themed shirt"
	"a shirt with three triangles"
	"a simple shirt"
}

color
{
	"green"
	"lime"
	"turquoise"
	"purple"
	"magenta"
	"pink"
	"blue"
	"cyan"
	"black"
	"grey"
	"yellow"
	"white"
	"brown"
	"orange"
	"red"
}

experimentanimal
{
	"chickens"
	"bats"
	"octopuses"
	"squirrels"
	
}

//Zim and GIR plans proposition
zimplanpropositions
{
	"%(zimgoodplanproposition)\n%(zimneutralplanproposition)\n%(zimbadplanproposition)"
	"%(zimbadplanproposition)\n%(zimneutralplanproposition)\n%(zimgoodplanproposition)"
	"%(zimneutralplanproposition)\n%(zimgoodplanproposition)\n%(zimbadplanproposition)"
	"%(zimneutralplanproposition)\n%(zimbadplanproposition)\n%(zimgoodplanproposition)"
	"%(zimgoodplanproposition)\n%(zimbadplanproposition)\n%(zimneutralplanproposition)"
	"%(zimbadplanproposition)\n%(zimgoodplanproposition)\n%(zimneutralplanproposition)"
}

girplanpropositions
{
	"%(girgoodplanproposition)%(girneutralplanproposition)%(girbadplanproposition)"
	"%(girbadplanproposition)%(girneutralplanproposition)%(girgoodplanproposition)"
	"%(girneutralplanproposition)%(girgoodplanproposition)%(girbadplanproposition)"
	"%(girneutralplanproposition)%(girbadplanproposition)%(girgoodplanproposition)"
	"%(girgoodplanproposition)%(girbadplanproposition)%(girneutralplanproposition)"
	"%(girbadplanproposition)%(girgoodplanproposition)%(girneutralplanproposition)"
}


internalenvelope
{
	"Internal Envelope Dialogue 1 - %(exampleenvelope)"
	"%(username)'s computer"
	"Here is a blanklist object - %(blanklist)."
}

//This envelope in particular I think is fun. You can use this in dialogue to pretend like your ghost is looking through your user's files!

usersfolder
{
	"%(username)'s Recycle Bin"
	"%(username)'s Document folder"
	"%(username)'s secret folder"
}


//Now, this next envelope is unique. I'm just going to leave it the way that cindysuke wrote it, but look carefully. This list has TWO values, separated by a comma. You can see the first is the Korean word, and the second is the definition of the word. This is used for a bit of dialogue cindysuke wrote where their ghost would teach the user a word in Korean. 
//You can set up double envelopes like this too by following this format! However, it does require a bit of fancier coding in aitalk to get it to work right. I'll leave an example of it in aitalk so you can study it.

lessonkor
{
	"사과(sa-gua),apple"
	"노동(no-dong),labor"
	"손가락(son-ga-rak),finger"
	"마르크스(ma-r-k-s),Marx"
	"자본주의(ja-bon-ju-yi),capitalism"
}

//You can also format your envelopes like this as one line separated by semicolons, but personally I think the spaced lists above look nicer. It's up to you however you want to set them up.

blanklistparagraph
{
	"List paragraph 1"; "List paragraph 2"; "List paragraph 3"; "List paragraph 4"; "List paragraph 5";
}


 //**** Don't touch this ***************************************************************
 //This is code stuff and nothing for you to worry about, just save the .dic and move on! You're done!
 
 On_\person
{
 	person
}
